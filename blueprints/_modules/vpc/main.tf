locals {
  common_tags = {
    App = "${var.app}"
    Env = "${var.env}"
  }
}

data "aws_availability_zones" "main" {}

# AWS VPC
resource "aws_vpc" "main" {
  cidr_block           = "${var.cidr_block}"
  instance_tenancy     = "${var.tenancy_type}"
  enable_dns_support   = true
  enable_dns_hostnames = false

  tags = "${merge(local.common_tags, map("Name", var.name))}"
}

# Bring the default network ACL (generated by the VPC) under our control.
resource "aws_default_network_acl" "main" {
  default_network_acl_id = "${aws_vpc.main.default_network_acl_id}"

  ingress {
    protocol   = -1
    rule_no    = 100
    action     = "allow"
    cidr_block = "0.0.0.0/0"
    from_port  = 0
    to_port    = 0
  }

  egress {
    protocol   = -1
    rule_no    = 100
    action     = "allow"
    cidr_block = "0.0.0.0/0"
    from_port  = 0
    to_port    = 0
  }

  tags = "${merge(local.common_tags, map("Name", var.name))}"
}

# Bring the default route table (generated by the VPC) under our control.
# We'll use the default route table for private routing.
resource "aws_default_route_table" "main" {
  default_route_table_id = "${aws_vpc.main.default_route_table_id}"

  # Point all public traffic to the NAT gateway.
  route {
    cidr_block     = "0.0.0.0/0"
    nat_gateway_id = "${aws_nat_gateway..id}"
  }

  tags {
    Name    = "${var.context}_default"
    Context = "${var.context}"
  }
}

resource "aws_route_table" "main" {

}
